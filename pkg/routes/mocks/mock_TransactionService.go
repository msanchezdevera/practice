// Code generated by MockGen. DO NOT EDIT.
// Source: ../service/transaction.go

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	transaction "practice/api/transaction"
	errors "practice/pkg/errors"
	model "practice/pkg/model"
	reflect "reflect"
)

// MockTransactionService is a mock of TransactionService interface
type MockTransactionService struct {
	ctrl     *gomock.Controller
	recorder *MockTransactionServiceMockRecorder
}

// MockTransactionServiceMockRecorder is the mock recorder for MockTransactionService
type MockTransactionServiceMockRecorder struct {
	mock *MockTransactionService
}

// NewMockTransactionService creates a new mock instance
func NewMockTransactionService(ctrl *gomock.Controller) *MockTransactionService {
	mock := &MockTransactionService{ctrl: ctrl}
	mock.recorder = &MockTransactionServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTransactionService) EXPECT() *MockTransactionServiceMockRecorder {
	return m.recorder
}

// Create mocks base method
func (m *MockTransactionService) Create(create *transaction.TransactionCreate) (*model.Transaction, errors.Error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", create)
	ret0, _ := ret[0].(*model.Transaction)
	ret1, _ := ret[1].(errors.Error)
	return ret0, ret1
}

// Create indicates an expected call of Create
func (mr *MockTransactionServiceMockRecorder) Create(create interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockTransactionService)(nil).Create), create)
}

// Get mocks base method
func (m *MockTransactionService) Get(transactionId string) *model.Transaction {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", transactionId)
	ret0, _ := ret[0].(*model.Transaction)
	return ret0
}

// Get indicates an expected call of Get
func (mr *MockTransactionServiceMockRecorder) Get(transactionId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockTransactionService)(nil).Get), transactionId)
}

// GetAll mocks base method
func (m *MockTransactionService) GetAll() []*model.Transaction {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAll")
	ret0, _ := ret[0].([]*model.Transaction)
	return ret0
}

// GetAll indicates an expected call of GetAll
func (mr *MockTransactionServiceMockRecorder) GetAll() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAll", reflect.TypeOf((*MockTransactionService)(nil).GetAll))
}
